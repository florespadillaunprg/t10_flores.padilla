import libreria

assert(libreria.validar_entero("a") == False)
assert(libreria.validar_entero("1") == False)
assert(libreria.validar_entero(1.23) == False)
assert(libreria.validar_entero(10) == True)
print("validar_entero OK")

assert (libreria.validar_rango("a", 1, 5) == False)
assert (libreria.validar_rango(0, 1, 5) == False)
assert (libreria.validar_rango(1, 1, 5) == True)
assert (libreria.validar_rango(5, 1, 5) == True)
assert (libreria.validar_rango(6, 1, 5) == False)
print("validar_rango OK")

assert (libreria.validar_nombre("a") == False)
assert (libreria.validar_nombre("ab") == False)
assert (libreria.validar_nombre("ana") == True)
print("validar_nombre OK")

assert (libreria.validar_precio(2) == True)
assert (libreria.validar_precio(10.23) == True)
assert (libreria.validar_precio(100.00) == True)
assert (libreria.validar_precio(100004) == True)
assert (libreria.validar_precio(3.25) == True)
assert (libreria.validar_precio(-3) == False)
assert (libreria.validar_precio(-3.36) == False)
assert (libreria.validar_precio("alex") == False)
print("validar_precio -> OK")

assert (libreria.validar_producto("aji") == True)
assert (libreria.validar_producto(True) == False)
assert (libreria.validar_producto(2) == False)
assert (libreria.validar_producto(2222) == False)
assert (libreria.validar_producto(456) == False)
assert (libreria.validar_producto(-2) == False)
print("validar_producto -> OK ")

assert (libreria.validar_kilogramo(5) == True)
assert (libreria.validar_kilogramo(2) == True)
assert (libreria.validar_kilogramo(5.36) == False)
assert (libreria.validar_kilogramo(-5) == False)
assert (libreria.validar_kilogramo("juan") == False)
print("validar_kilogramo -> Ok")

assert (libreria.validar_dia("2") == False)
assert (libreria.validar_dia("alex") == False)
assert (libreria.validar_dia(0.23) == False)
assert (libreria.validar_dia(5) == True)
assert (libreria.validar_dia(0) == False)
assert (libreria.validar_dia(30) == True)
print("validar_dia -> OK")

assert (libreria.validar_dia(3) == True)
assert (libreria.validar_dia(5) == True)
assert (libreria.validar_dia(0) == False)
assert (libreria.validar_dia(30) == True)
assert (libreria.validar_dia(31) == False)
assert (libreria.validar_dia("2") == False)
assert (libreria.validar_dia(3.02) == False)
assert (libreria.validar_dia(-23) == False)
print("validar_dia -> OK")

assert (libreria.validar_mes("enero") == True)
assert (libreria.validar_mes("45") == False)
assert (libreria.validar_mes("alex") == False)
assert (libreria.validar_mes(4) == False)
print("validar_mes -> OK")

assert (libreria.validar_anio(-20) == True)
assert (libreria.validar_anio(2019) == True)
assert (libreria.validar_anio(20) == True)
assert (libreria.validar_anio("alex") == False)
assert (libreria.validar_anio(0) == True)
assert (libreria.validar_anio(2.36) == False)
print("validar_anio -> OK")

assert (libreria.validar_dia_semana("lunes") == True)
assert (libreria.validar_dia_semana(5) == False)
assert (libreria.validar_dia_semana(-25665) == False)
assert (libreria.validar_dia_semana("23") == False)
assert (libreria.validar_dia_semana("alex") == False)
print("validar_dia_semana -> OK")

assert (libreria.validar_sexo("M") == True)
assert (libreria.validar_sexo("MASCULINO") == True)
assert (libreria.validar_sexo("F") == True)
assert (libreria.validar_sexo("FEMENINO") == True)
assert (libreria.validar_sexo("m") == True)
assert (libreria.validar_sexo("masculino") == True)
assert (libreria.validar_sexo("f") == True)
assert (libreria.validar_sexo("femenino") == True)
assert (libreria.validar_sexo("alex") == False)
assert (libreria.validar_sexo(0) == False)
print("validar_sexo -> OK")

assert (libreria.validar_dni("65")== False)
assert (libreria.validar_dni(52.85)== False)
assert (libreria.validar_dni("98522")== False)
assert (libreria.validar_dni("71580576")== True)
assert (libreria.validar_dni(0)== False)
assert (libreria.validar_dni(00000000)== False)
assert (libreria.validar_dni(71580572)== False)
assert (libreria.validar_dni(9865)== False)
assert (libreria.validar_dni(-5121)== False)
print("validar_dni -> OK")


